name: Release

on:
  pull_request:
    branches: [main]
    types: [labeled,closed]

jobs:
  build-artifacts:
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release')

    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          # - target: aarch64-unknown-linux-gnu
          #   os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: aarch64-pc-windows-msvc
            os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/workflows/setup

      - name: Install Rust toolchain for target
        uses: dtolnay/rust-toolchain@stable
        with:          
          targets: ${{ matrix.target }}

      - name: Install Node (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/setup-node@v4
        with:
          node-version: 20      

      - name: Install pnpm (Windows)
        if: matrix.os == 'windows-latest'
        uses: pnpm/action-setup@v4
        with:
          version: 9.9

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:          
          args: --target ${{ matrix.target }}
          projectPath: rs/crates/repo-quest
          tauriScript: cargo tauri
          tagName: v__VERSION__
          releaseName: 'RepoQuest v__VERSION__'          